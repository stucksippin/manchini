// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Типы объектов: новостройка, вторичка, дом и т.д.
enum ObjectType {
  NEW_BUILDING // новостройка
  SECONDARY // вторичка
  HOUSE // дом
  APARTMENT // квартира
}

// Виды объектов инфраструктуры
enum InfrastructureType {
  SCHOOL // школа
  PARK // парк
  MALL // торговый центр
  KINDERGARTEN // детский сад
}

// Основная модель — карточка объекта недвижимости
model Realty {
  id              Int                    @id @default(autoincrement())
  name            String // название объекта 
  price           Float // цена
  area            Float // площадь в м²
  rooms           Int // число комнат
  type            ObjectType // тип недвижимости
  city            String // город
  district        String // район
  street          String // улица
  latitude        Float? // широта (для карты)
  longitude       Float? // долгота
  dateAdded       DateTime               @default(now()) // дата добавления
  // связь с инфраструктурой
  infrastructures RealtyInfrastructure[]
  photos          Photo[] // связь с фотографиями
}

// Join-модель «многие-ко-многим» между Object и InfrastructureType
model RealtyInfrastructure {
  object   Realty             @relation(fields: [objectId], references: [id])
  objectId Int
  type     InfrastructureType

  @@id([objectId, type])
}

model Photo {
  id       Int     @id @default(autoincrement())
  url      String // путь к фото (например, относительный к `public`)
  object   Realty  @relation(fields: [objectId], references: [id])
  objectId Int
  isMain   Boolean @default(false) // опционально: основное фото объекта
}
